class Solution {
    public int editDistance(String s1, String s2) {
        // Code here
        return minOper(s1,s2,0,0,s1.length(),s2.length(),new HashMap<String,Integer> ());
        
    }
    
    private int minOper(String s1, String s2, int i,int j, int m, int n,HashMap<String,Integer> hm){
        
        if(j >= n)
            return m-i;
        
        if(i>=m)
            return n-j;
        
        String currkey= i+"-"+j;
        if(hm.containsKey(currkey))
            return hm.get(currkey);
        
        int ans=10000;
        
        if(s1.charAt(i) == s2.charAt(j)){
            ans = minOper(s1,s2,i+1,j+1,m,n,hm);
        }
        else{
            int insertion = 1 + minOper(s1,s2,i,j+1,m,n,hm);
            int deletion =1 + minOper(s1,s2,i+1,j,m,n,hm);
            int replace =1 + minOper(s1,s2,i+1,j+1,m,n,hm);
            
            ans=Math.min(insertion,Math.min(deletion,replace));
        }
        
        hm.put(currkey,ans);
        return ans;
    }
}
