class Solution
{
    //Function to find the length of longest common subsequence in two strings.
    static int lcs(int x, int y, String s1, String s2)
    {
        // your code here
         return lengthofLCS(s1,s2,0,0,x,y,new HashMap<String,Integer> ());   
    }
    
    static int lengthofLCS(String s1,String s2, int i,int j, int m,int n,HashMap<String,Integer> hm){
        
        if(i>=m || j>=n)
            return 0;
        
        int ans=0;
        
        String currkey = i+"-"+j;
        if(hm.containsKey(currkey))
            return hm.get(currkey);
        
        if(s1.charAt(i)==s2.charAt(j)){
            ans = 1 + lengthofLCS(s1,s2,i+1,j+1,m,n,hm);
        }
        else{
            int a = lengthofLCS(s1,s2,i+1,j,m,n,hm);
            int b = lengthofLCS(s1,s2,i,j+1,m,n,hm);
            ans = Math.max(a,b);
        }
        
        hm.put(currkey,ans);
        return ans;
    }
    
}
