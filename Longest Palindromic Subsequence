class Solution
{
    public int longestPalinSubseq(String s)
    {
        //code here
        int m=s.length();
        int[][] dp = new int[m+1][m+1];
        for(int i=0;i<m+1;i++){
            for(int j=0;j<m+1;j++)
            dp[i][j]=-1;
        }
        return lengthofLCS(s,new StringBuilder(s).reverse().toString(),0,0,s.length(),s.length(),dp);   
    }
    
    private int lengthofLCS(String s1,String s2, int i,int j, int m,int n,int[][] dp){
        
        if(i>=m || j>=n)
            return 0;
        
        int ans=0;
        
        if(dp[i][j]!=-1)
            return dp[i][j];
        
        if(s1.charAt(i)==s2.charAt(j)){
            ans = 1 + lengthofLCS(s1,s2,i+1,j+1,m,n,dp);
        }
        else{
            int a = lengthofLCS(s1,s2,i+1,j,m,n,dp);
            int b = lengthofLCS(s1,s2,i,j+1,m,n,dp);
            ans = Math.max(a,b);
        }
        
        dp[i][j]=ans;
        return ans;
    
    }
}
