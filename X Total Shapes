class Solution
{
    //Function to find the number of 'X' total shapes.
    public int xShape(char[][] grid)
    {
        // code here
        int n = grid.length;
        int m = grid[0].length;
        int count = 0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='X'){
                    count++;
                    dfs(grid,i,j,n,m);
                }
            }
        }
        return count;
    }
    
    public void dfs(char[][] grid,int currrow,int currcol,int n,int m){
        if(currrow<0 || currrow>=n || currcol<0 || currcol>=m || grid[currrow][currcol]=='O'){
            return;
        }
        
        grid[currrow][currcol] = 'O';
        dfs(grid,currrow+1,currcol,n,m);
        dfs(grid,currrow-1,currcol,n,m);
        dfs(grid,currrow,currcol-1,n,m);
        dfs(grid,currrow,currcol+1,n,m);
        
        return;
        
    }
}
